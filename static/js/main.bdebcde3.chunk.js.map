{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","props","todos","setSelectedTodo","setOpenedTodoModal","openedTodoModal","setLoading","className","map","todo","classNames","id","completed","title","type","onClick","handleClick","TodoFilter","useState","displayedDeleteButton","setDisplayedDeleteButton","optionForFilter","setOptionForFilter","setQuery","value","onChange","event","target","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","selectedTodo","loading","selectedUser","setSelectedUser","useEffect","userId","Number","href","email","name","App","setTodos","query","todosFromServer","filteredTodosByQuery","filter","prepTitle","toLowerCase","prepQuery","includes","filteredTodos","useMemo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bdebcde3.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { FC } from 'react';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[],\n  setSelectedTodo: (arg0: Todo) => void,\n  openedTodoModal: boolean,\n  setOpenedTodoModal: (arg0: boolean) => void,\n  setLoading: (arg0: boolean) => void,\n}\n\nexport const TodoList: FC<Props> = (props) => {\n  const {\n    todos,\n    setSelectedTodo,\n    setOpenedTodoModal,\n    openedTodoModal,\n    setLoading,\n  } = props;\n\n  const handleClick = (todo: Todo) => {\n    setSelectedTodo(todo);\n    setOpenedTodoModal(true);\n    setLoading(true);\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            key={todo.id}\n            data-cy=\"todo\"\n            className={\n              classNames('', { 'has-background-info-light': false })\n            }\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed\n              && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={classNames(\n                { 'has-text-success': todo.completed },\n                { 'has-text-danger': todo.completed === false },\n              )}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => handleClick(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={\n                    classNames(\n                      'far fa-eye', { 'fa-eye-slash': openedTodoModal },\n                    )\n                  }\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { FC, useState } from 'react';\n\ninterface Props {\n  optionForFilter: string,\n  setOptionForFilter: (optionForFilter: string) => void,\n  setQuery: (query: string) => void,\n}\n\nexport const TodoFilter: FC<Props> = (props) => {\n  const [displayedDeleteButton, setDisplayedDeleteButton] = useState(false);\n  const { optionForFilter, setOptionForFilter, setQuery } = props;\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={optionForFilter}\n            onChange={(event => setOptionForFilter(event.target.value))}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          onChange={(event) => {\n            setQuery(event.target.value);\n            setDisplayedDeleteButton(true);\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {displayedDeleteButton && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(1000)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { FC, useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ninterface Props {\n  selectedTodo: Todo | null,\n  setOpenedTodoModal: (arg0: boolean) => void,\n  loading: boolean,\n  setLoading: (arg0: boolean) => void,\n}\n\nexport const TodoModal: FC<Props> = (props) => {\n  const {\n    selectedTodo, setOpenedTodoModal, loading, setLoading,\n  } = props;\n  const [selectedUser, setSelectedUser] = useState<User>();\n\n  useEffect(() => {\n    getUser(Number(selectedTodo?.userId))\n      .then(setSelectedUser);\n    setLoading(false);\n  }, [selectedTodo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loading\n        ? <Loader />\n        : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${selectedTodo?.id}`}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={() => setOpenedTodoModal(false)}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {selectedTodo?.title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {selectedTodo?.completed\n                  ? <strong className=\"has-text-success\">Done</strong>\n                  : <strong className=\"has-text-danger\">Planned</strong>}\n\n                {' by '}\n\n                <a href={`mailto:${selectedUser?.email}`}>\n                  {selectedUser?.name}\n                </a>\n              </p>\n            </div>\n          </div>\n        )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport {\n  FC, useEffect, useMemo, useState,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [openedTodoModal, setOpenedTodoModal] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [optionForFilter, setOptionForFilter] = useState('');\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    getTodos()\n      .then(todosFromServer => setTodos(todosFromServer));\n    setLoading(false);\n  }, []);\n\n  const filteredTodosByQuery = todos.filter(todo => {\n    const prepTitle = todo.title.toLowerCase();\n    const prepQuery = query.toLowerCase();\n\n    return prepTitle.includes(prepQuery);\n  });\n\n  const filteredTodos = useMemo(() => {\n    return todos.filter(todo => {\n      switch (optionForFilter) {\n        case 'all':\n          return filteredTodosByQuery;\n        case 'active':\n          return filteredTodosByQuery && todo.completed === false;\n        case 'completed':\n          return filteredTodosByQuery && todo.completed;\n        default:\n          return true;\n      }\n    });\n  }, [optionForFilter, query, todos]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                optionForFilter={optionForFilter}\n                setOptionForFilter={setOptionForFilter}\n                setQuery={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loading\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={filteredTodos}\n                    setSelectedTodo={setSelectedTodo}\n                    setOpenedTodoModal={setOpenedTodoModal}\n                    openedTodoModal={openedTodoModal}\n                    setLoading={setLoading}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {openedTodoModal && (\n        <TodoModal\n          loading={loading}\n          selectedTodo={selectedTodo}\n          setOpenedTodoModal={setOpenedTodoModal}\n          setLoading={setLoading}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}